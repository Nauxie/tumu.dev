{"version":3,"sources":["images/abhinav3.png","components/MiniIcon.jsx","components/Language.jsx","components/Framework.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MiniIcon","props","href","link","title","target","rel","className","src","imgsrc","alt","Language","Framework","data","miniIcons","languages","frameworks","App","useState","dataa","miniIconsList","map","linkData","languagesList","frameworksList","class","pic","Delay","ms","bottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adfad5d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abhinav3.a11c4782.png\";","import React from 'react'\n\nfunction MiniIcon(props) {\n  return (\n    <a\n      href={props.link}\n      title={props.title}\n      target='_blank'\n      rel='noopener noreferrer'\n    >\n      <img className='smallpic' src={props.imgsrc} alt={props.title} />\n    </a>\n  )\n}\nexport default MiniIcon\n","import React from 'react'\n\nfunction Language(props) {\n  return (\n    <a\n      href={props.link}\n      title={props.title}\n      target='_blank'\n      rel='noopener noreferrer'\n    >\n      <img className='icon2' src={props.imgsrc} alt={props.title} />\n    </a>\n  )\n}\nexport default Language\n","import React from 'react'\n\nfunction Framework(props) {\n  return (\n    <a\n      href={props.link}\n      title={props.title}\n      target='_blank'\n      rel='noopener noreferrer'\n    >\n      <img className='icon' src={props.imgsrc} alt={props.title} />\n    </a>\n  )\n}\nexport default Framework\n","const data = {\n  miniIcons: [\n    {\n      link: 'https://www.linkedin.com/in/abhinav-tumu-863635170/',\n      title: 'LinkedIn',\n      imgsrc:\n        'https://upload.wikimedia.org/wikipedia/commons/c/ca/LinkedIn_logo_initials.png'\n    },\n    {\n      link: 'https://github.com/Nauxie',\n      title: 'Github',\n      imgsrc:\n        'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'\n    },\n    {\n      link:\n        'https://devpost.com/Nauxie?ref_content=user-portfolio&ref_feature=portfolio&ref_medium=global-nav',\n      title: 'Devpost',\n      imgsrc:\n        'https://seeklogo.com/images/D/devpost-logo-95FF685C5D-seeklogo.com.png'\n    },\n    {\n      link: 'https://pdfhost.io/v/Qbiug0qy3_Resume_10292019_Tumu_finalpdf.pdf',\n      title: 'Resume',\n      imgsrc:\n        'https://www.pinclipart.com/picdir/middle/110-1103863_treaty-clipart-transparent-resume-icon-transparent-png-download.png'\n    }\n  ],\n  languages: [\n    {\n      link: 'https://www.javascript.com/',\n      title: 'JavaScript',\n      imgsrc:\n        'http://pluspng.com/img-png/javascript-vector-png-javascript-vector-logo-600.png'\n    },\n    {\n      link: 'https://www.python.org/',\n      title: 'Python',\n      imgsrc:\n        'http://www.iconarchive.com/download/i73027/cornmanthe3rd/plex/Other-python.ico'\n    },\n    {\n      link: 'https://www.java.com/en/',\n      title: 'Java',\n      imgsrc:\n        'https://www.stickpng.com/assets/images/58480979cef1014c0b5e4901.png'\n    },\n    {\n      link: 'http://www.cplusplus.com/',\n      title: 'C++',\n      imgsrc:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/1200px-ISO_C%2B%2B_Logo.svg.png'\n    }\n  ],\n  frameworks: [\n    {\n      link: 'https://reactjs.org/',\n      title: 'React',\n      imgsrc:\n        'https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png'\n    },\n    {\n      link: 'https://redux.js.org/',\n      title: 'Redux',\n      imgsrc:\n        'https://raw.githubusercontent.com/reduxjs/redux/master/logo/logo.png'\n    },\n    {\n      link: 'https://nodejs.org/en/',\n      title: 'Node.js',\n      imgsrc: 'https://i.imgur.com/uBhAv52.png'\n    },\n    {\n      link: 'https://expressjs.com',\n      title: 'Express.js',\n      imgsrc: 'https://content.nexza.com/stack-items/express.png'\n    },\n    {\n      link: 'https://www.mongodb.com/',\n      title: 'MongoDB',\n      imgsrc:\n        'https://media.glassdoor.com/sqll/433703/mongodb-squarelogo-1564695792753.png'\n    },\n    {\n      link: 'https://graphql.org/',\n      title: 'GraphQL',\n      imgsrc:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/2000px-GraphQL_Logo.svg.png'\n    },\n    {\n      link: 'https://keras.io/',\n      title: 'Keras',\n      imgsrc: 'https://keras.io/img/keras-logo-small.jpg'\n    },\n    {\n      link: 'http://flask.palletsprojects.com/en/1.1.x/',\n      title: 'Flask',\n      imgsrc:\n        'https://www.todesktop.com/images/1c2437c139969ae8e4100b477fb824f1.svg'\n    }\n  ]\n}\nexport default data\n","import React, { useState } from 'react'\nimport pic from './images/abhinav3.png'\nimport './App.css'\nimport Typing from 'react-typing-animation'\nimport MiniIcon from './components/MiniIcon'\nimport Language from './components/Language'\nimport Framework from './components/Framework'\nimport dataa from './data'\nimport Fade from 'react-reveal/Fade'\nimport Flip from 'react-reveal/Flip'\n\nfunction App() {\n  const [miniIcons] = useState(dataa.miniIcons)\n  const [languages] = useState(dataa.languages)\n  const [frameworks] = useState(dataa.frameworks)\n\n  const name = 'Abhinav Tumu'\n\n  const miniIconsList = miniIcons.map(linkData => (\n    <MiniIcon\n      link={linkData.link}\n      title={linkData.title}\n      imgsrc={linkData.imgsrc}\n    />\n  ))\n  const languagesList = languages.map(linkData => (\n    <Language\n      link={linkData.link}\n      title={linkData.title}\n      imgsrc={linkData.imgsrc}\n    />\n  ))\n\n  const frameworksList = frameworks.map(linkData => (\n    <Framework\n      link={linkData.link}\n      title={linkData.title}\n      imgsrc={linkData.imgsrc}\n    />\n  ))\n  return (\n    <div className='Background'>\n      <p class='headers'>{name}</p>\n      <Fade>\n        <img className='profpic' src={pic} alt='profilepicture' />\n      </Fade>\n      <Fade>\n        <div className='links'>{miniIconsList}</div>\n        <Typing>\n          <div className='bioDiv'>\n            <span className='bio'>Hi! </span>\n            <Typing.Delay ms={500} />\n            <span className='bio'>\n              I'm a computer science student at UC Irvine.\n            </span>\n          </div>\n        </Typing>\n      </Fade>\n\n      <Fade bottom>\n        <div>\n          <p className='titletype'>Languages</p>\n          {languagesList}\n        </div>\n        <div>\n          <p className='titletype'>Frameworks and Libraries</p>\n          {frameworksList}\n        </div>\n      </Fade>\n\n      <div className='bottomtext'>Powered by React and Github Pages</div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}